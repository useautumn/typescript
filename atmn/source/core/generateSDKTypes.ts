import fs from "fs";
import path from "path";
import type { Feature } from "../compose/models/featureModels.js";
import type { Plan } from "../compose/models/planModels.js";

/**
 * Generate @useautumn-sdk.d.ts with type narrowing for product and feature IDs
 *
 * This creates autocomplete in the IDE for known product/feature IDs
 * while still allowing any string value.
 */
export function generateSDKTypes({
	plans,
	features,
	outputDir,
}: {
	plans: Plan[];
	features: Feature[];
	outputDir: string;
}) {
	// Generate interface members for each ID
	const productIdMembers = plans.map((p) => `    ${p.id}: any;`).join("\n");
	const featureIdMembers = features.map((f) => `    ${f.id}: any;`).join("\n");

	// Filter for continuous_use features only (for entities)
	const entityFeatures = features.filter((f) => f.type === "continuous_use");
	const entityFeatureIdMembers = entityFeatures
		.map((f) => `    ${f.id}: any;`)
		.join("\n");

	const content = `// AUTO-GENERATED by atmn pull
// DO NOT EDIT MANUALLY - changes will be overwritten on next pull

import "@useautumn/sdk";

// Add your product and feature IDs to the SDK's interface maps
declare module "@useautumn/sdk/custom/autumn-ids" {
  export interface KnownProductIdsMap {
${productIdMembers || "    // No products found"}
  }

  export interface KnownFeatureIdsMap {
${featureIdMembers || "    // No features found"}
  }

  export interface KnownEntityFeatureIdsMap {
${entityFeatureIdMembers || "    // No continuous_use features found"}
  }
}
`;

	const outputPath = path.join(outputDir, "@useautumn-sdk.d.ts");
	fs.writeFileSync(outputPath, content);

	return outputPath;
}
